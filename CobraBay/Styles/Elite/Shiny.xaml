<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:resx="clr-namespace:LocalResources.Properties;assembly=LocalResources"
	xmlns:cbv="clr-namespace:CBViewModel;assembly=CBViewModel">

	<Style
		TargetType="{x:Type Hyperlink}">
		<Style.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="true">
				<Setter
					Property="Foreground"
					Value="#FFF" />
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="false">
				<Setter
					Property="Foreground"
					Value="#333" />
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="true">
				<Setter
					Property="Cursor"
					Value="Hand" />
			</Trigger>
		</Style.Triggers>
		<Setter
			Property="Foreground"
			Value="#AAA" />
		<Setter
			Property="TextDecorations"
			Value="Underline" />
	</Style>

	<ControlTemplate
		x:Key="CloseButtonTemplate"
		TargetType="{x:Type Button}">
		<Grid
			Name="buttontext"
			Width="20"
			Height="20"
			Background="Transparent">
			<Image
				Source="/EDLaunch;component/EliteImages/a1Close.png"
				VerticalAlignment="Center"
				HorizontalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="False">
				<Setter
					TargetName="buttontext"
					Property="Background"
					Value="Transparent">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsMouseOver"
				Value="True">
				<Setter
					TargetName="buttontext"
					Property="Background"
					Value="#737373">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsPressed"
				Value="True">
				<Setter
					TargetName="buttontext"
					Property="Background"
					Value="Red">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style
		x:Key="CloseButtonStyle"
		TargetType="{x:Type Button}">
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template"
			Value="{StaticResource CloseButtonTemplate}">
		</Setter>
	</Style>
	<ControlTemplate
		x:Key="MinimizeButtonTemplate"
		TargetType="{x:Type Button}">
		<Grid
			Name="buttontext"
			Width="20"
			Height="20"
			Background="Transparent">
			<Image
				Source="/EDLaunch;component/EliteImages/a1Minimise.png"
				VerticalAlignment="Center"
				HorizontalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="False">
				<Setter
					TargetName="buttontext"
					Property="Background"
					Value="Transparent">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsMouseOver"
				Value="True">
				<Setter
					TargetName="buttontext"
					Property="Background"
					Value="#737373">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsPressed"
				Value="True">
				<Setter
					TargetName="buttontext"
					Property="Background"
					Value="Red">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style
		x:Key="MinimizeButtonStyle"
		TargetType="{x:Type Button}">
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template"
			Value="{StaticResource MinimizeButtonTemplate}">
		</Setter>
	</Style>
	<ControlTemplate
		x:Key="LaunchPurchaseTemplate"
		TargetType="{x:Type Button}">
		<Grid
			Name="buttongrid"
			Width="{TemplateBinding Width}"
			Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
			<TextBlock
				FontFamily="/EDLaunch;component/Fonts/#Euro Caps"
				FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
				TextAlignment="Center"
				VerticalAlignment="Center"
				Foreground="White"
				TextWrapping="Wrap"
                       Margin="4"
				Text="{x:Static resx:Resources.BTNT_Purchase}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsMouseOver"
				Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchPurchaseStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchPurchaseTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchRegisterTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Margin="4,2"
                       Text="{x:Static resx:Resources.BTNT_Register_JW3}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchRegisterStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchRegisterTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchLinkTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Margin="4"
                       Text="{x:Static resx:Resources.BTNT_Link}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
            <Trigger
				Property="IsEnabled"
				Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchLinkStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchLinkTemplate}">
        </Setter>
    </Style>
    <ControlTemplate
		x:Key="LaunchRedeemTemplate"
		TargetType="{x:Type Button}">
		<Grid
			Name="buttongrid"
			Width="{TemplateBinding Width}"
			Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
			<TextBlock
				FontFamily="/EDLaunch;component/Fonts/#Euro Caps"
				FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       Margin="4"
				TextAlignment="Center"
				VerticalAlignment="Center"
				Foreground="White"
				TextWrapping="Wrap"
				Text="{x:Static resx:Resources.BTNT_Redeem}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsMouseOver"
				Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsPressed"
				Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style
		x:Key="LaunchRedeemStyle"
		TargetType="{x:Type Button}">
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template"
			Value="{StaticResource LaunchRedeemTemplate}">
		</Setter>
	</Style>
	<ControlTemplate
		x:Key="CopyTemplate"
		TargetType="{x:Type Button}">
		<Grid
			Name="buttongrid"
			Width="{TemplateBinding Width}"
			Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
			<TextBlock
				FontFamily="/EDLaunch;component/Fonts/#Euro Caps"
				FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       Margin="4"
				TextAlignment="Center"
				VerticalAlignment="Center"
				Foreground="White"
				TextWrapping="Wrap"
				Text="{x:Static resx:Resources.BTNT_Copy}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsMouseOver"
				Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsPressed"
				Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style
		x:Key="CopyStyle"
		TargetType="{x:Type Button}">
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template"
			Value="{StaticResource CopyTemplate}">
		</Setter>
	</Style>
	<ControlTemplate x:Key="LaunchLoginTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Margin="4"
                       Text="{x:Static resx:Resources.BTNT_Login}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchLoginStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchLoginTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchSteamLoginTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Margin="4"
                       Text="{x:Static resx:Resources.BTNT_LoginSteam}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
            <Trigger
				Property="IsEnabled"
				Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchSteamLoginStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchSteamLoginTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchLogoutButtonTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Margin="4"
                       Text="{x:Static resx:Resources.MenuLogOutUser}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
            <Trigger
				Property="IsEnabled"
				Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchLogoutButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchLogoutButtonTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchExistingTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Margin="4"
                       Text="{x:Static resx:Resources.BTNT_Existing}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
            <Trigger
				Property="IsEnabled"
				Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchExistingStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchExistingTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchWorkingTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
              Background="#1A1A1A">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="#444444"
                       TextWrapping="Wrap"
                       Margin="4"
                       Text="{x:Static resx:Resources.BTNT_Working}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="buttongrid" Property="Background" Value="#1A1A1A">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="buttongrid" Property="Background" Value="#1A1A1A">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="buttongrid" Property="Background" Value="#1A1A1A">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchWorkingStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchWorkingTemplate}">
        </Setter>
    </Style>
	<ControlTemplate
		x:Key="StringButtonTemplate"
		TargetType="{x:Type Button}">
		<Grid
			Name="buttongrid"
			Width="{TemplateBinding Width}"
			Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
			<TextBlock
				FontFamily="/EDLaunch;component/Fonts/#Euro Caps"
				FontSize="18"
				TextAlignment="Center"
				VerticalAlignment="Center"
				Foreground="White"
				TextWrapping="Wrap"
				Padding="8"
				Text="{TemplateBinding Content}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsMouseOver"
				Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsPressed"
				Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style
		x:Key="StringButtonStyle"
		TargetType="{x:Type Button}">
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template"
			Value="{StaticResource StringButtonTemplate}">
		</Setter>
	</Style>
	<ControlTemplate x:Key="LaunchCancelProgressTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <Image Source="/EDLaunch;component/EliteImages/a1Cancel.png"/>
            <Rectangle Name="buttonfilter" Fill="White" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="buttonfilter" Property="Opacity" Value="0.0">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="buttonfilter" Property="Opacity" Value="0.25">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="buttonfilter" Property="Opacity" Value="0.5">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchCancelProgressStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchCancelProgressTemplate}">
        </Setter>
    </Style>
	<ControlTemplate
		x:Key="LaunchDownloadTemplate"
		TargetType="{x:Type Button}">
		<Grid
			Name="buttongrid"
			Width="{TemplateBinding Width}"
			Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
			<Image
				Source="/EDLaunch;component/EliteImages/a1Download.png" />
			<Rectangle
				Name="buttonfilter"
				Fill="White" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsMouseOver"
				Value="False">
				<Setter
					TargetName="buttonfilter"
					Property="Opacity"
					Value="0.0">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsMouseOver"
				Value="True">
				<Setter
					TargetName="buttonfilter"
					Property="Opacity"
					Value="0.25">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsPressed"
				Value="True">
				<Setter
					TargetName="buttonfilter"
					Property="Opacity"
					Value="0.5">
				</Setter>
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style
		x:Key="LaunchDownloadStyle"
		TargetType="{x:Type Button}">
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template"
			Value="{StaticResource LaunchDownloadTemplate}">
		</Setter>
	</Style>
	<ControlTemplate x:Key="LaunchInstallTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       Margin="4"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       Text="{x:Static resx:Resources.BTNT_Install}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchInstallStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchInstallTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchUpgradeTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       Margin="4"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Text="{x:Static resx:Resources.BTNT_Upgrade}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchUpgradeStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchUpgradeTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchPlayTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       Margin="4"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Text="{x:Static resx:Resources.BTNT_Play}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchPlayStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchPlayTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchPlayOfflineTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       LineHeight="17"
                       LineStackingStrategy="BlockLineHeight"
                       Margin="4"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Text="{x:Static resx:Resources.BTNT_PlayOffline}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="#1A1A1A">
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchPlayOfflineStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchPlayOfflineTemplate}">
        </Setter>
    </Style>
    <ControlTemplate x:Key="LaunchLogoutTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="HostGrid">
            <TextBlock x:Name="NormalBlock" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                       FontSize="14" FontWeight="Bold"
                       HorizontalAlignment="Right" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="HostGrid" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HostGrid" Property="Opacity" Value="0.8"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchLogoutStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchLogoutTemplate}" />
    </Style>
	<!--
    <ControlTemplate x:Key="LaunchLinkTemplate" TargetType="{x:Type Button}">
        <Canvas Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <Image Source="/EDLaunch;component/EliteImages/BgButton.png" Opacity="1.0"/>
            <Grid Canvas.Left="1" Canvas.Top="1" Width="223" Height="34">
                <TextBlock x:Name="NormalBlock" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                       FontSize="14"        
                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
        </Canvas>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="buttongrid" Property="Opacity" Value="0.8" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="buttongrid" Property="Opacity" Value="1.0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchLinkStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="225" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Template" Value="{StaticResource LaunchLinkTemplate}" />
    </Style>
	-->
    <ControlTemplate x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
              MinHeight="19">
            <Border Name="PART_Track" BorderBrush="#333333" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
            <Rectangle Canvas.Left="2" Canvas.Top="2" Name="PART_Indicator"
                   Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
				HorizontalAlignment="Left"
				Fill="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}" Margin="2"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource ProgressBarTemplate}" />
    </Style>
	<ControlTemplate
		x:Key="ProgressBarOverlayTemplate"
		TargetType="{x:Type ProgressBar}">
		<Grid
			Width="{TemplateBinding Width}"
			Height="{TemplateBinding Height}"
			MinHeight="19">
			<Border
				Name="PART_Track"
				BorderBrush="Transparent"
				BorderThickness="1"
				Width="{TemplateBinding Width}"
				Height="{TemplateBinding Height}" />
			<Rectangle
				Canvas.Left="2"
				Canvas.Top="2"
				Name="PART_Indicator"
				Height="{TemplateBinding Height}"
				Width="{TemplateBinding Width}"
				HorizontalAlignment="Left"
				Fill="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}"
				Margin="2,6" />
		</Grid>
	</ControlTemplate>
	<Style
		x:Key="ProgressBarOverlayStyle"
		TargetType="{x:Type ProgressBar}">
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template"
			Value="{StaticResource ProgressBarOverlayTemplate}" />
	</Style>
	<!--
	<ControlTemplate x:Key="LaunchCancelTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="buttongrid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/EDLaunch;component/EliteImages/Cancel.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="buttongrid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/EDLaunch;component/EliteImages/CancelRollover.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchCancelStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchCancelTemplate}">
        </Setter>
    </Style>
	-->
    <ControlTemplate x:Key="LaunchSubmitTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       Text="{x:Static resx:Resources.BTNT_Submit}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
				<Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LaunchSubmitStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LaunchSubmitTemplate}">
        </Setter>
    </Style>

    <ControlTemplate x:Key="LoginLinkTemplate" TargetType="{x:Type Button}">
        <Grid Name="buttongrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			Background="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
            <TextBlock FontFamily="/EDLaunch;component/Fonts/#Euro Caps" FontSize="18"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Foreground="White"
                       Text="{x:Static resx:Resources.BTNT_LoginLink}"
                       />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=DefaultButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=HoverButtonColour}">
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter
					TargetName="buttongrid"
					Property="Background"
					Value="{Binding Source={x:Static cbv:CBTheme.Theme}, Path=PressedButtonColour}">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="LoginLinkStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource LoginLinkTemplate}">
        </Setter>
    </Style>

    <!-- Fancy scrollbar, maybe.
    
    Based on http://msdn.microsoft.com/en-us/library/ms742173(v=vs.110).aspx
    
    With line up/down buttons removed.
    -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Track x:Name="PART_Track" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="1,0,1,0">
                        <Thumb.Background>
                            <SolidColorBrush Color="#9F9F9F"/>
                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.00001*"/>
            </Grid.ColumnDefinitions>
            <Track x:Name="PART_Track" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0,1,0,1">
                        <Thumb.Background>
                            <SolidColorBrush Color="#9F9F9F"/>
                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}" >
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="8" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>